{
  "App":{
    "title": "welcome to my humble application ReactJS interview questions.",
    "link":"https://github.com/walterfcarvalho/interview-tests",
    "description": "Fill confortable to visit this small project on the link above"
  },
  "ListActivites":{
    "title":"Fetch and display an expandable list of activities",
    "link":"https://medium.com/@justin.sherman/react-coding-interview-challenge-3-94bc3386ba1c",
    "descritption":""
  },

  "MergeSortPart1": {
    "title": "Recursive Divide arrays",
    "link": "https://medium.com/@justin.sherman/react-coding-interview-challenge-10-7d92416a8c7a",
    "description": "in this question, you should receive an array as props, so split this array in two arrays until the arrays sets units have length = 1 "
  },
  "LoginScreen": {
    "title": " a simple login validation",
    "link": "https://medium.com/@justin.sherman/react-coding-interview-challenge-11-6a1318c717ec",
    "description": "see the link aboce to further informations"
  },
  "FilterOnList": {
    "title": "A filter on a list ",
    "link": "https://medium.com/@justin.sherman/react-coding-interview-challenge-9-dc20873e0ce5",
    "description": "this component get a list os users from web. So show from that list only names match"
  },
  
  "MultipleChoiceQuiz": {
    "title": "Create and score a multiple choice quiz",
    "link": "https://medium.com/@justin.sherman/react-coding-interview-challenge-8-f852c6d19385",
    "description": "Receive an array of questions, receive the answer, and step tp next question after all, show total score"
  },
  
  "RenderRobots": {
    "title": "handle a list of robots",
    "link": "https://medium.com/@justin.sherman/react-coding-interview-challenge-2-bb8909e2b4a0",
    "description": ""
  },
  
  "ArbitrarilyJsObject": {
    "title": "arbitrarily nested JavaScript Object",
    "link": "https://medium.com/@justin.sherman/react-coding-interview-challenge-1-4b19bce85b0a",
    "description": "Write a functional component that accepts an arbitrarily nested object as a prop. Each key/property of the object is a word and its associated value is either (1) an object of the same format or (2) a definition string"
  } 

  , "ExpandingLadder" :{
    "title":"Render an expanding ladder based on the userâ€™s mouse position",
    "description":"when mouse mouve over a part, all parts from part zero to part with mouse is over get bigger. Once mouse leaves all parts returns to original size.",
    "link":"https://medium.com/@justin.sherman/react-coding-interview-challenge-4-c41e2874d8ef"
  }

  , "userContext" :{
    "title":"Handle useContext hook",
    "description":"show how use userContextAPI",
    "link":"https://medium.com/@justin.sherman/react-coding-interview-challenge-5-57c30b25fbb3"
  }

  , "tictactoe" :{
    "title":"Tic tac toe pratice",
    "description":"a simple game ticatactoe",
    "link":""
  }






  , "-" :{
    "title":"",
    "description":"",
    "link":""
  }

}